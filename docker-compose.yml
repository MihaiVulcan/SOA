version: "3"
services:

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    volumes:
      - zookeeper-data:/data
      - zookeeper-datalog:/datalog

  kafka-server-1:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-server-1:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka-data:/var/lib/kafka/data

  manager:
    image: sheepkiller/kafka-manager
    ports:
       - 29000:9000
    environment:
       ZK_HOSTS: zookeeper:2181
    depends_on:
      - zookeeper

  rabbitmq:
    image: rabbitmq:management
    ports:
      - "5672:5672"
      - "15672:15672"
      - "15674:15674"
    volumes:
      - "./rabbit_enabled_plugins:/etc/rabbitmq/enabled_plugins"

  db:
    image: postgres:16.0-alpine3.18
    container_name: db
    environment:
      - POSTGRES_USER=compose-postgres
      - POSTGRES_PASSWORD=compose-postgres
      - POSTGRES_DB=db
    ports:
        - '5432:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data

  eureka:
    build: ./eureka
    ports:
      - 8079:8079


  gateway:
    build: ./gateway
    ports:
     - 8080:8080
    depends_on:
      - eureka


  rest-api:
    build: ./rest-service
    ports:
      - 8081:8081
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/db
      - SPRING_DATASOURCE_USERNAME=compose-postgres
      - SPRING_DATASOURCE_PASSWORD=compose-postgres
      - SERVER_PORT=8081
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
    volumes:
      - C:\users\Mihai\.aws\:/root/.aws:ro
    depends_on:
      - db
      - gateway
      - eureka
      - kafka-server-1

  rest-api-2:
    build: ./rest-service
    ports:
      - 8082:8081
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/db
      - SPRING_DATASOURCE_USERNAME=compose-postgres
      - SPRING_DATASOURCE_PASSWORD=compose-postgres
      - SERVER_PORT=8081
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
    volumes:
      - C:\users\Mihai\.aws\:/root/.aws:ro
    depends_on:
      - db
      - gateway
      - eureka
      - kafka-server-1


  notification-service:
    build: ./notification-service
    ports:
      - 8083:8083
    environment:
      - SERVER_PORT=8083
    depends_on:
      - rest-api
      - rabbitmq


volumes:
  postgres-data:
  kafka-data:
  zookeeper-data:
  zookeeper-datalog:
  postgres_data_keycloak:
